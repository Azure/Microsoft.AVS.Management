parameters:
- name: moduleFolderName
  type: string
- name: moduleDisplayName
  type: string

stages:
- stage: 'Validation_${{ parameters.moduleDisplayName }}' # Valid stage name cannot contain the character '.'
  displayName: 'Validate Package ${{ parameters.moduleFolderName }}'
  dependsOn: []
  jobs:
  - job: Validate
    displayName: 'Validate ${{ parameters.moduleFolderName }}'
    variables:
      destination: '$(System.DefaultWorkingDirectory)/tmp'
    steps:
    - task: NuGetAuthenticate@1

    - task: AzureCLI@2
      inputs:
        azureSubscription: Scripting Metadata
        scriptLocation: 'inlineScript'
        scriptType: 'pscore'
        inlineScript: |
          az artifacts universal download `
            --organization $(consumptionAuthority) `
            --project=$(consumptionProject) `
            --scope project `
            --feed $(consumptionFeed) `
            --name shuttle `
            --version $(shuttleVersion) `
            --path shuttle          
      displayName: Prepare shuttle
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

    - pwsh: |
        .build-tools/registerSources.ps1 $(consumptionFeedUrl) $(destination)
        .build-tools/getRequiredModules.ps1 '$(System.AccessToken)' '${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1'
      displayName: 'Restore Dependencies for ${{ parameters.moduleFolderName }}'
      env:
        NUGET_PLUGIN_PATHS: $(NUGET_PLUGIN_PATHS)

    - task: PowerShell@2
      displayName: 'Pre-Validate Module and Scripts for ${{ parameters.moduleFolderName }}'
      inputs:
        filePath: 'tests/prevalidateModules.ps1'
        arguments: "${{ parameters.moduleFolderName }}"
        pwsh: true

    - task: PowerShell@2
      inputs:
        filePath: .build-tools/publish.ps1 
        arguments: >
          '$(System.AccessToken)'
          "$(System.DefaultWorkingDirectory)/${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1"
          "$(Build.BuildNumber)"
          "$(destination)"
      displayName: 'Test publish'
      env:
        NUGET_PLUGIN_PATHS: $(NUGET_PLUGIN_PATHS)

    - pwsh: |
        echo "+ ${{ parameters.moduleFolderName }}@$(moduleVersion)" > shuttle/baseline
        dotnet shuttle/Shuttle.dll generate
      env:
        NUGET_PLUGIN_PATHS: $(NUGET_PLUGIN_PATHS)
        METADATA: uri://console
      displayName: 'Generate metadata'
