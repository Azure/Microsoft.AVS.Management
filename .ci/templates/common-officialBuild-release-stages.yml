parameters:
- name: moduleFolderName
  type: string
- name: moduleDisplayName
  type: string
- name: stageForSigningFolder
  type: string
- name: stageForUnsignedFolder
  type: string

stages:
- stage: 'Official_Build_Release_${{ parameters.moduleDisplayName }}' # Valid stage name cannot contain the character '.'
  displayName: '${{ parameters.moduleFolderName }} Package Release'
  dependsOn:
  - 'Official_Build_${{ parameters.moduleDisplayName }}'
  - 'Official_Build_Check_Compliance'
  pool:
    vmImage: windows-2019
  jobs:
  # Sign and Publish
  ################################################################################################
  - job: Release
    displayName: 'Sign and Publish for ${{ parameters.moduleFolderName }}'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifact: '${{ parameters.stageForSigningFolder }}'
        path: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleFolderName }}'
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifact: '${{ parameters.stageForUnsignedFolder }}'
        path: '$(Build.ArtifactStagingDirectory)/${{ parameters.stageForUnsignedFolder }}'
    - task: EsrpCodeSigning@2
      inputs:
        ConnectedServiceName: 'AVS-Automation-AdminTools-OfficialBuild'
        FolderPath: '$(Build.ArtifactStagingDirectory)/${{ parameters.moduleFolderName }}'
        Pattern: '${{ parameters.moduleFolderName }}.psd1,${{ parameters.moduleFolderName }}.psm1'
        UseMinimatch: false
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
            {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
              "parameters": [
                {
                  "parameterName": "OpusName",
                  "parameterValue": "AVS-Automation-AdminTools"
                },
                {
                  "parameterName": "OpusInfo",
                  "parameterValue": "https://github.com/Azure/azure-avs-automation-admintools"
                },
                {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
                },
                {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd sha256"
                },
                {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
              ],
              "toolName": "signtool.exe",
              "toolVersion": "6.2.9304.0"
            }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'
    - task: PowerShell@2
      displayName: Restore Dependencies
      inputs:
        filePath: '.build-tools/getRequiredModules.ps1'
        arguments: '${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1'
        pwsh: true
    - task: NuGetAuthenticate@1
    - pwsh: |
        Remove-Item "$(Build.ArtifactStagingDirectory)/${{ parameters.moduleFolderName }}/CodeSignSummary*"
      displayName: Remove CodeSign Summary before packaging
    - publish: $(Build.ArtifactStagingDirectory)/${{ parameters.moduleFolderName }}
      displayName: Publish Signed Files To Artifact Directory
      artifact: '${{ parameters.moduleFolderName }}'
    - task: PowerShell@2
      displayName: Publish version dependencies to Official feed
      env:
        UNOFFICIAL_FEED_NUGET_APIKEY: $(unofficialFeedNugetApiKey)
      inputs:
        filePath: '.build-tools/findAndPublishDependencies.ps1'
        arguments: '$(Build.ArtifactStagingDirectory)/${{ parameters.stageForUnsignedFolder }}/${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1'
        pwsh: true
    - task: PowerShell@2
      displayName: Publish Developer Version to Official Feed
      env:
        UNOFFICIAL_FEED_NUGET_APIKEY: $(unofficialFeedNugetApiKey)
        # MICROSOFT_AVS_MANAGEMENT_OFFICIAL_FEED_AND_RELEASES_PAT: $(Microsoft-AVS-Management-OfficialFeed-And-ReleasesPAT)
      inputs:
        filePath: '.build-tools/publishPreviewOrDevVersionToUnofficialFeed.ps1'
        arguments: '$(Build.ArtifactStagingDirectory)/${{ parameters.stageForUnsignedFolder }}/${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1 dev'
        pwsh: true
    - task: PowerShell@2
      displayName: Publish Preview Version to Official Feed
      env:
        UNOFFICIAL_FEED_NUGET_APIKEY: $(unofficialFeedNugetApiKey)
      inputs:
        filePath: '.build-tools/publishPreviewOrDevVersionToUnofficialFeed.ps1'
        arguments: '$(Build.ArtifactStagingDirectory)/${{ parameters.stageForUnsignedFolder }}/${{ parameters.moduleFolderName }}/${{ parameters.moduleFolderName }}.psd1 preview'
        pwsh: true
