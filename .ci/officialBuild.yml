trigger:
- none

pr:
- none

schedules:
- cron: "30 0 * * Tue-Sat"
  displayName: Tue-Sat at 00:30 UTC
  branches:
    include:
    - main
##################################
resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/Compliance

variables:
  MAJOR: 1
  minor: 0
  moduleFolderName: 'Azure.AVSPowerCLI'

name: $(MAJOR).$(minor).$(Rev:r)
##################################
stages:
- stage: Official_Build 
  displayName: Build and Publish Package
  pool:
    vmImage: windows-2019
  jobs:
  - job: Build_and_Publish_Job
    displayName: Build Official AVS-Automation-AdminTools
    steps:
    - task: PowerShell@2
      displayName: Restore Dependencies
      inputs:
        filePath: '.build-tools/getRequiredModules.ps1'
        arguments: 'powercli/${{ variables.moduleFolderName }}/${{ variables.moduleFolderName }}.psd1'
        pwsh: true
    - task: PowerShell@2
      displayName: Versioning Module
      inputs:
        filePath: '.build-tools/updateModuleVersion.ps1'
        arguments: 'powercli/${{ variables.moduleFolderName }}/${{ variables.moduleFolderName }}.psd1'
        pwsh: true
    - task: PowerShell@2
      displayName: Pre-Validate Module and Scripts #PSGallery publishing guidelines: https://docs.microsoft.com/en-us/powershell/scripting/gallery/how-to/publishing-packages/publishing-a-package?view=powershell-7.1#pre-validate-your-item
      inputs:
        filePath: 'tests/prevalidateModules.ps1'
        arguments: 'powercli/${{ variables.moduleFolderName }}'
        pwsh: true
    - task: EsrpCodeSigning@1
      inputs:
        ConnectedServiceName: 'AVS-Automation-AdminTools-OfficialBuild'
        FolderPath: 'powercli/${{ variables.moduleFolderName }}'
        Pattern: '${{ variables.moduleFolderName }}.psd1,${{ variables.moduleFolderName }}.psm1'
        UseMinimatch: false
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
            {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
              "parameters": [
                {
                  "parameterName": "OpusName",
                  "parameterValue": "AVS-Automation-AdminTools"
                },
                {
                  "parameterName": "OpusInfo",
                  "parameterValue": "https://github.com/Azure/azure-avs-automation-admintools"
                },
                {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
                },
                {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd sha256"
                },
                {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
              ],
              "toolName": "signtool.exe",
              "toolVersion": "6.2.9304.0"
            }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'
    - task: NuGetAuthenticate@0
      inputs:
        nuGetServiceConnections: Unofficial-AVS-Automation-AdminTools
    - task: PowerShell@2
      displayName: Package Module
      inputs:
        filePath: 'package/packageModule.ps1'
        arguments: 'powercli/${{ variables.moduleFolderName }} powercli/${{ variables.moduleFolderName }} official'
        pwsh: true
# - stage: Compliance
#   displayName: Compliance
#   dependsOn: Official_Build
#   jobs:
#   - job: Check_Compliance
#     steps:
#     - pwsh: |
#         Write-Output "---- NO COMPLIANCE TASKS----"
# - stage: Test
#   displayName: Test
#   dependsOn: Compliance
#   jobs:
#   - job: Run_Tests
#     steps:
#     - pwsh: |
#         Write-Output "---- NO TEST RUNNING----"
# - stage: Release
#   displayName: Release
#   dependsOn: 
#   - Test
#   condition: succeeded('Test')
#   jobs:
#   - job: Release
#     steps:
#     - pwsh: |
#         Write-Output "---- NO RELEASE TASKS----"